name: Try

on:
  pull_request:
    types: [labeled]

jobs:
  parse-comment:
    name: Process Comment
    runs-on: ubuntu-latest
    outputs:
      configuration: ${{ steps.configuration.outputs.result }}
    steps:
      - uses: actions/github-script@v6
        id: configuration
        with:
          script: |
            function makeComment(body) {
                console.log(body);
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body
                })
            }

            let configuration = {
              platforms: [],
              layout: "none",
              unit_tests: false,
            };

            if context.eventName == "pull_request" {
              let try_labels = [];
              for (const label of context.payload.pull_request.labels) {
                if (label.startsWith("T-")) {
                  try_labels.push(label);
                }
                console.log("Found labels: " + try_labels);
                github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  name: label,
                })
                return { platforms: [] };
              }
            } else {
              let tokens = context.payload.comment.body.split(/\s+/);
              let tagIndex = tokens.indexOf("@bors-servo");
              if (tagIndex == -1 || tagIndex + 1 >= tokens.length) {
                return { platforms: [] };
              }


              let tryString = tokens[tagIndex + 1];
              console.log("Found try string: '" + tryString + "'");
              if (tryString == "try") {
                configuration.platforms = ["linux", "macos", "windows"];
                configuration.unit_tests = true;
                configuration.layout = "all";
              } else {
                if (tryString.includes("linux")) {
                  configuration.platforms.push("linux");
                } else if (tryString.includes("macos")) {
                  configuration.platforms.push("macos");
                } else if (tryString.includes("windows")) {
                  configuration.platforms.push("windows");
                }
                if (tryString.includes("wpt")) {
                  configuration.platforms.push("linux");
                  configuration.layout = "2013";
                } else if (tryString.includes("wpt-2020")) {
                  configuration.platforms.push("linux");
                  configuration.layout = "2020";
                }
              }
            }

            if (configuration.platforms.length != 0) {
              let username = context.payload.comment.user.login;
              let result = await github.rest.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username
              });
              if (!result.data.user.permissions.push) {
                makeComment('üîí User @' + username + ' does not have permission to trigger try jobs.');
                return { platforms: [] };
              }
            }

            const url = context.serverUrl +
              "/" + context.repo.owner +
              "/" + context.repo.repo +
              "/actions/runs/" + context.runId;
            const formattedURL = "[#" + context.runId + "](" + url + ")";
            makeComment("üî® Triggering try run (" + formattedURL + ") with platform=" + returnValue.platform + " and layout=" + returnValue.layout);
            return returnValue;

  run-try:
    name: Run Try
    needs: ["parse-comment"]
    if: ${{ fromJson(needs.parse-comment.outputs.configuration).platforms[0] != null }}
    uses: ./.github/workflows/main.yml
    with:
      configuration: ${{ needs.parse-comment.outputs.configuration }}

  results:
    name: Results
    needs: ["parse-comment", "run-try"]
    runs-on: ubuntu-latest
    if: ${{ always() && fromJson(needs.parse-comment.outputs.configuration).try}}
    steps:
      - name: Success
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        uses: actions/github-script@v6
        with:
          script: |
              const url = context.serverUrl +
                "/" + context.repo.owner +
                "/" + context.repo.repo +
                "/actions/runs/" + context.runId;
              const formattedURL = "[#" + context.runId + "](" + url + ")";
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚ú® Try run (" + formattedURL + ") " + "succeeded.",
              });
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        uses: actions/github-script@v6
        with:
          script: |
              const url = context.serverUrl +
                "/" + context.repo.owner +
                "/" + context.repo.repo +
                "/actions/runs/" + context.runId;
              const formattedURL = "[#" + context.runId + "](" + url + ")";
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚ö†Ô∏è Try run (" + formattedURL + ") " + "failed.",
              });


